[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "jtroses.github.io",
    "section": "",
    "text": "Janelle’s Machine Learning Blog\n\n\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\ndata visualization\n\n\n\n\n\n\n\n\n\n\n\nNov 22, 2023\n\n\nJanelle Rose\n\n\n\n\n\n\n  \n\n\n\n\nClassification Example\n\n\n\n\n\n\n\nclassification\n\n\n\n\n\n\n\n\n\n\n\nNov 22, 2023\n\n\nJanelle Rose\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "The plot below is from the Seaborn Python Library documentation\n\n5 blog posts, not 3\nTopics are pre-defined\n\nProbability theory and random variables\n\nHistogram\n\nClustering\n\nKmeans clustering\nDBSCAN labels for scatter plot\n\nLinear and nonlinear regression\n\nline or scatter plot, Random Forest\n\nClassification\n\nROC, PR, Confusion Matrix, Random Forest\nK nearest neighbor\n\nAnomaly/outlier detection\n\nDBSCAN labels for scatter plot\n\n\n\nLearing objectoves: 1. Use various techniques related to preprocessing prior to the use of machine learning models. 2. Describe the probability theory and random variables. 3. Identify the common tasks in machine learning/data mining models for clustering. 4. Analyze multiple linear and nonlinear regression. 5. Describe the algorithms, theories, and applications related to machine learning/data mining for classification. 6. Detect anomaly/outlier behavior and the treatment techniques.\n\n\n\n\n\nThe plot below is from the Yellowbrick Python Library documentation\n\nfrom yellowbrick.datasets import load_concrete\nfrom yellowbrick.features import JointPlotVisualizer\n\n# Load the dataset\nX, y = load_concrete()\n\n# Instantiate the visualizer\nvisualizer = JointPlotVisualizer(columns=\"cement\")\n\nvisualizer.fit_transform(X, y)        # Fit and transform the data\nvisualizer.show()     \n\n\n\n\n&lt;Axes: xlabel='cement', ylabel='target'&gt;"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I created this Blog for my Intro to machine learning course while I am learning different machine learning topics. Hopefully this examples can help someone work through some introductory topics"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Classification Example",
    "section": "",
    "text": "Classification is a supervised machine learning technique, that is used with data that has labels. The example below uses a dataset that has attributes about individuals, including their salary, gender, education level, etc. The dataset also includes which whether or not the an individual is in a senior leadership role ore not. We use the attributes in the data to predict whether or not an individual is a senior leadership role or not based on some of the attributed from the data.\n\nRead in Dataset\n\nimport pandas as pd\nsalary = pd.read_csv('../../data/Salary.csv')\nsalary.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 6684 entries, 0 to 6683\nData columns (total 9 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   Age                  6684 non-null   float64\n 1   Gender               6684 non-null   object \n 2   Education Level      6684 non-null   int64  \n 3   Job Title            6684 non-null   object \n 4   Years of Experience  6684 non-null   float64\n 5   Salary               6684 non-null   float64\n 6   Country              6684 non-null   object \n 7   Race                 6684 non-null   object \n 8   Senior               6684 non-null   int64  \ndtypes: float64(3), int64(2), object(4)\nmemory usage: 470.1+ KB"
  },
  {
    "objectID": "docs/index.html",
    "href": "docs/index.html",
    "title": "jtroses.github.io",
    "section": "",
    "text": "Janelle’s Machine Learning Blog"
  },
  {
    "objectID": "docs/posts/post-with-code/index.html",
    "href": "docs/posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "Janelle Rose\n2023-10-14\nThe plot below is from the Seaborn Python Library documentation"
  }
]