---
title: "K-Means Clustering"
author: "Janelle Rose"
date: now
categories: 
  - Clustering
  - K-Means
---

This blog post will look at K-Means clustering to create income groups from the salary attribute used in the Regression [blog post](https://jtroses.github.io/posts/regression/). K-Means clustering is an unsupervised learning technique that is used with data that does not have a label. In this example, I would like to create 2 or 3 different groups to classify income levels. Such as High/Low salary or high/medium/low salary. 

# Data

```{python}
import pandas as pd
salary = pd.read_csv('../../data/Salary.csv')
salary.info()
```

## Subset Data 
```{python}
X = salary[['Salary', 'Years of Experience']]
```

# Cluster Number selection 
```{python, warninng = FALSE}
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

inertias = []

for i in range(1,11):
    kmeans = KMeans(n_clusters=i)
    kmeans.fit(X)
    inertias.append(kmeans.inertia_)

plt.plot(range(1,11), inertias, marker='o')
plt.title('Elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.show()
```

# Calculate Iniertia
```{python}
kmeans.inertia_
```

# Visualizer income groups 
```{python}
kmeans_3 = KMeans(n_clusters=3)
kmeans_3.fit(X)

plt.scatter(X['Salary'], X['Years of Experience'], c=kmeans_3.labels_)
plt.show()

kmeans_2 = KMeans(n_clusters=2)
kmeans_2.fit(X)

plt.scatter(X['Salary'], X['Years of Experience'], c=kmeans_2.labels_)
plt.show()
```

```{python}
kmeans_3.inertia_
```

```{python}
kmeans_2.inertia_
```